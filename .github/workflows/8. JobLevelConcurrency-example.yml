name: 8. Handle Workflow Concurrency
on:
  workflow_dispatch: # Allows manual triggering of the workflow from the GitHub UI
jobs:
    build-core:
        runs-on: ubuntu-latest
        steps:
            - name: Build Core Library
              run: echo "Building the Core Library..."
    build-module:
        runs-on: ubuntu-latest
        steps:
            - name: Build Module
              run: echo "Building the module..."
    test:
        runs-on: ubuntu-latest
        needs: [build-core, build-module]
        steps:
            - name: Run Tests
              run: echo "Running tests..."
    deploy:
        runs-on: ubuntu-latest
        needs: test
        # This job will cancel any in-progress runs of the same workflow
        # if a new run is triggered while this one is still running.
        # This is useful to prevent overlapping deployments.
        concurrency:
            group: group-deploy-${{ github.workflow }}
            cancel-in-progress: true
        steps:
            # Simulate a long-running deployment
            - name: Deploy Application
              run: |
                echo "Deploying the application..."
                sleep 60s
    notify:
        runs-on: ubuntu-latest
        needs: deploy
        steps:
            - name: Notify Completion
              run: echo "All jobs completed successfully!"
    cleanup:
        runs-on: ubuntu-latest
        needs: [build-core, build-module, test, deploy, notify]
        steps:
            - name: Cleanup Resources
              run: echo "Cleaning up resources..."
    report:
        runs-on: ubuntu-latest
        needs: cleanup
        steps:
            - name: Generate Report
              run: echo "Generating report of the workflow execution..."
